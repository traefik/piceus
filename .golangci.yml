version: "2"
linters:
  default: all
  disable:
    - contextcheck
    - cyclop
    - dupl
    - err113
    - exhaustive
    - exhaustruct
    - forcetypeassert
    - ireturn
    - lll
    - mnd
    - nilnil
    - nlreturn
    - noctx
    - nonamedreturns
    - noinlineerr
    - paralleltest
    - prealloc
    - rowserrcheck
    - sqlclosecheck
    - testpackage
    - tparallel
    - varnamelen
    - wrapcheck
    - wsl
    - wsl_v5
  settings:
    depguard:
      rules:
        main:
          deny:
            - pkg: github.com/instana/testify
              desc: not allowed
            - pkg: github.com/pkg/errors
              desc: Should be replaced by standard lib errors package
    funlen:
      lines: -1
      statements: 50
    goconst:
      min-len: 5
      min-occurrences: 3
    gocritic:
      disabled-checks:
        - httpNoBody
        - sloppyReassign
        - hugeParam
        - rangeValCopy
        - octalLiteral
        - paramTypeCombine
        - unnamedResult
        - whyNoLint
      enabled-tags:
        - diagnostic
        - style
        - performance
    gocyclo:
      min-complexity: 15
    godox:
      keywords:
        - FIXME
    gomoddirectives:
      replace-allow-list:
        - github.com/http-wasm/http-wasm-host-go
    gosec:
      excludes:
        - G304
        - G307
    govet:
      disable:
        - fieldalignment
      enable-all: true
    misspell:
      locale: US
    tagalign:
      align: false
      sort: true
      order:
        - description
        - json
        - toml
        - yaml
        - yml
        - label
        - label-slice-as-struct
        - file
        - kv
        - export
  exclusions:
    generated: lax
    rules:
      - linters:
          - funlen
          - goconst
          - nosnakecase
        path: (.+)_test.go
      - path: pkg/core/scrapper.go
        text: Function 'process' is too long
      - path: pkg/core/scrapper.go
        text: Function 'process' has too many statements
      - path: pkg/core/scrapper.go
        text: cyclomatic complexity \d+ of func `\(\*Scrapper\).process` is high
      - path: pkg/sources/github.go
        text: 'G110: Potential DoS vulnerability via decompression bomb'
      - path: pkg/tracer/tracer.go
        text: Setup returns interface \(go\.opentelemetry\.io/otel/sdk/trace.SpanProcessor\)
      - path: (.+)\.go$
        text: 'ST1000: at least one file in a package should have a package comment'
      - path: (.+)\.go$
        text: 'package-comments: should have a package comment'
      - path: pkg/client/client_test.go
        text: 'cognitive complexity \d+ of func `TestNewWithOptions` is high \(> \d+\)'
      - path: pkg/client/client_test.go
        text: 'Function name: TestNewWithOptions, Cyclomatic Complexity: \d+, Halstead Volume: \d+.\d+, Maintainability Index: \d+'
      - path: pkg/client/adaptive_rate_limiter.go
        text: 'const "headerRateRemaining" used as a key at http.Header, but "X-RateLimit-Remaining" is not canonical, want "X-Ratelimit-Remaining"'
      - path: pkg/client/adaptive_rate_limiter.go
        text: 'const "headerRateReset" used as a key at http.Header, but "X-RateLimit-Reset" is not canonical, want "X-Ratelimit-Reset"'
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
    - goimports
  settings:
    gofumpt:
      extra-rules: true
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
